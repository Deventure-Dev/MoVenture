
@{
    Layout = "_Layout";
}


<!-- Partial Inline Views -->
<!-- Home View -->
<div id="main">
    <div class="category-container" data-bind="foreach: PlaylistListViewModel" id="playlists">

        <div class="category-item">
            <div class="category-name">
                <span data-bind="text: Name"></span>
            </div>
            <div class="movie-items" data-bind="foreach: MinifiedMoviesListViewModel">
                <a data-bind="attr: {href: '/movie?id=' + Id()}">
                    <div class="movie-item">
                        <img class="item-photo" alt="movie-photo" data-bind="attr: {src: PictureUrl}" />
                        <div class="item-rating">
                            <img class="photo-star" src="~/img/star_icn.png" />
                            <span data-bind="text: Rating"></span>
                        </div>
                        <span data-bind="text: Tags"></span>
                        <span data-bind="text: Title" class="title"></span>

                    </div>
                </a>
            </div>

        </div>

    </div>-
</div>

<link rel="stylesheet" type="text/css" href="~/css/home.css" media="screen" />



@section Scripts{
    <script type="text/javascript" src="~/js/knockout.js"></script>
    <script type="text/javascript" src="~/js/jquery-3.3.1.js"></script>
    <script type="text/javascript" src="~/js/sammy.js"></script>
    <script type="text/javascript" src="~/Scripts/ViewModels/mainViewModel.js"></script>
    <script type="text/javascript" src="~/Scripts/ViewModels/MinifiedMoviesViewModel.js"></script>
    <script type="text/javascript" src="~/Scripts/ViewModels/PlaylistsViewModel.js"></script>
    <script type="text/javascript" src="~/Scripts/ViewModels/PlaylistMovieViewModel.js"></script>

    <script type="text/javascript">
        var playlistListViewModel = null;
        $(document).ready(function () {
            playlistListViewModel = new PlaylistsViewModel();
            ko.applyBindings(playlistListViewModel, document.getElementById("playlists"));
            var decodedToken = parseJwt(localStorage.getItem('token'));
            ajaxGet("/Playlist/GetByUserId?userId=" + decodedToken.nameid, {}, function (data) {
                console.log(data)
                playlistListViewModel.init(data);
            }, function (err) {
                console.log(err.message);
                alert("An error occured");
            });
        });

        function parseJwt (token) {
            var base64Url = token.split('.')[1];
            var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
            var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
            }).join(''));

            return JSON.parse(jsonPayload);
        };

        function ajaxGet(url, postData, successCallback, failureCallBack, context, asyncCall) {
            $.ajax({
                url: url,
                dataType: "json",
                type: "GET",
                beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token')); },
                contentType: 'application/json; charset=utf-8',
                async: asyncCall === undefined ? true : asyncCall,
                cache: false,
                data: postData,
                success: successCallback,
                error: failureCallBack,
                context: context
            });
        }

    </script>
}
