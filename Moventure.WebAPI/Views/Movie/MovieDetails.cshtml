
@{
    ViewData["Title"] = "MovieDetails";
    Layout = "_Layout";
}

<script type="text/javascript" src="~/js/knockout.js"></script>
<script type="text/javascript" src="~/js/jquery-3.3.1.js"></script>
<script type="text/javascript" src="~/Scripts/ViewModels/MovieDetailsViewModel.js"></script>
<link rel="stylesheet" type="text/css" href="~/css/movie-details.css" media="screen" />
<script src="//cdnjs.cloudflare.com/ajax/libs/knockout/2.2.1/knockout-min.js"></script>
<script type="text/javascript" src="~/Scripts/common/ntabs.js"></script>


<div id="content" style="display: flex; flex-flow: column wrap; font-weight: bold; text-align: center;">
    <div data-bind="foreach: FetchedMovie">
        <header class="header">
            <p class="header-title">MOVENTURE</p>
        </header>
        <div class="movie">
            <div class="image-content">
                <img class="image-url" style="width: 299px; height: 550px; border-radius: 15px; border: solid 1px #f0f0f0" data-bind="attr: {src: PictureUrl}" />
            </div>
            <div class="movie-details">



                <div class="n-tabs clearfix">
                    <div class="n-tabs-header">
                        <div class="n-tab n-tab-active" id="details" onclick="switchNTabs('details');">Details</div>
                        <div class="n-tab" id="rating" onclick="switchNTabs('rating');">Rating</div>
                        <div class="n-tab" id="cast" onclick="switchNTabs('cast');">Cast</div>
                    </div>
                    <div class="n-tabs-container clearfix">
                        <div class="n-tab-body clearfix" id="details-tab">
                            @await Html.PartialAsync("~/Views/Partial/_Details.cshtml")
                        </div>
                        <div class="n-tab-body hidden-n-tab clearfix" id="rating-tab">
                            @await Html.PartialAsync("~/Views/Partial/_Rating.cshtml")
                        </div>
                        <div class="n-tab-body hidden-n-tab clearfix" id="rating-tab">
                            @await Html.PartialAsync("~/Views/Partial/_Cast.cshtml")
                        </div>
                    </div>
                </div>




                <div class="details">
                    <h2 class="title" data-bind="text: Title"></h2>
                    <h2 class="tags" data-bind="text: Tags"></h2>
                    <h2 class="rating" data-bind="text: Rating"></h2>
                    <h2 class="description">
                        This is description
                        Of movie
                        Lets do it
                        hahahaha
                        hahahaS
                    </h2>
                    <h1 class="screen-title">Screenshots</h1>
                    <div class="screnshots">
                        <img class="image-url-screen" style="width: 100px; height: 100px; border-radius: 15px;" data-bind="attr: {src: PictureUrl}" />
                        <img class="image-url-screen" style="width: 100px; height: 100px; border-radius: 15px; " data-bind="attr: {src: PictureUrl}" />
                        <img class="image-url-screen" style="width: 100px; height: 100px; border-radius: 15px; " data-bind="attr: {src: PictureUrl}" />
                        <img class="image-url-screen" style="width: 100px; height: 100px; border-radius: 15px; " data-bind="attr: {src: PictureUrl}" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <footer class="footer"></footer>
</div>


@section Scripts{
    <script type="text/javascript">
        var movieDetailsViewModel = null;
        $(document).ready(function () {
            movieDetailsViewModel = new MovieDetailsViewModel();
            ko.applyBindings(movieDetailsViewModel, document.getElementById("content"));
            ajaxGet("/Movie/GetById?id=43cfb413-4c40-4d5c-96d6-3b0d4863dbb7", {}, function (data) {
                movieDetailsViewModel.init(data);
            }, function (err) {
                alert("An error occured");
                console.log("ERR", err);
            });
        });

        function ajaxGet(url, postData, successCallback, failureCallBack, context, asyncCall) {
            $.ajax({
                url: url,
                dataType: "json",
                type: "GET",
                contentType: 'application/json; charset=utf-8',
                async: asyncCall === undefined ? true : asyncCall,
                cache: false,
                data: postData,
                success: successCallback,
                error: failureCallBack,
                context: context
            });
        }

    </script>
}

